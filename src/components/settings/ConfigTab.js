import { useState, useEffect } from 'react';

const ConfigTab = ({ config, handleChange, onSave, saving, saved }) => {
  const [apiStatus, setApiStatus] = useState({ status: 'checking', message: '–ü—Ä–æ–≤–µ—Ä—è–µ–º...' });
  const [adminStatus, setAdminStatus] = useState({ status: 'checking', message: '–ü—Ä–æ–≤–µ—Ä—è–µ–º...' });

  const resetToDefaults = () => {
    // –û—á–∏—â–∞–µ–º localStorage –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    localStorage.removeItem('admin_settings');
    window.location.reload();
  };

  const checkApiStatus = async () => {
    if (!config.API_BASE_URL) {
      setApiStatus({ status: 'disconnected', message: 'URL –Ω–µ —É–∫–∞–∑–∞–Ω' });
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω–µ GitHub URL
    if (config.API_BASE_URL.includes('github.com')) {
      setApiStatus({ status: 'error', message: '–ù—É–∂–µ–Ω URL —Å–µ—Ä–≤–µ—Ä–∞, –∞ –Ω–µ GitHub' });
      return;
    }

    try {
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 10000);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å health endpoint
      const response = await fetch(`${config.API_BASE_URL}/health`, {
        method: 'GET',
        signal: controller.signal
      });
      
      clearTimeout(timeoutId);
      
      if (response.ok) {
        setApiStatus({ status: 'connected', message: '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ' });
      } else if (response.status === 404) {
        setApiStatus({ status: 'error', message: 'Health endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω' });
      } else {
        setApiStatus({ status: 'error', message: `–û—à–∏–±–∫–∞ ${response.status}` });
      }
    } catch (error) {
      if (error.name === 'AbortError') {
        setApiStatus({ status: 'disconnected', message: '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç' });
      } else {
        setApiStatus({ status: 'disconnected', message: '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω' });
      }
    }
  };

  const checkAdminStatus = async () => {
    // –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤–Ω—É—Ç—Ä–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏,
    // –æ–Ω–∞ —Ç–æ—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏–º URL
    if (!config.ADMIN_PANEL_URL) {
      setAdminStatus({ status: 'disconnected', message: 'URL –Ω–µ —É–∫–∞–∑–∞–Ω' });
      return;
    }
    
    // –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –º—ã –≤ –Ω–µ–π –Ω–∞—Ö–æ–¥–∏–º—Å—è
    setAdminStatus({ status: 'connected', message: '–ê–∫—Ç–∏–≤–µ–Ω' });
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ URL
  useEffect(() => {
    const checkStatuses = async () => {
      if (config.API_BASE_URL) {
        await checkApiStatus();
      }
      if (config.ADMIN_PANEL_URL) {
        await checkAdminStatus();
      }
    };
    
    checkStatuses().catch(console.error);
  }, [config.API_BASE_URL, config.ADMIN_PANEL_URL]); // eslint-disable-line react-hooks/exhaustive-deps

  const failoverOptions = [
    { value: "local", label: "–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ" },
    { value: "none", label: "–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å" }
  ];

  return (
    <div className="space-y-8">
      <h2 className="text-xl font-semibold">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</h2>
      
      {/* –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö */}
      <div className="bg-green-50 rounded-lg p-6 border border-green-200">
        <h3 className="text-lg font-medium mb-4 flex items-center gap-2">
          <span>üóÑÔ∏è</span> –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–°—Ç–∞—Ç—É—Å API —Å–µ—Ä–≤–µ—Ä–∞</label>
            <div className="flex items-center gap-2">
              <span className={`w-3 h-3 rounded-full ${
                apiStatus.status === 'connected' ? 'bg-green-500' :
                apiStatus.status === 'checking' ? 'bg-yellow-500' : 'bg-red-500'
              }`}></span>
              <span className={`font-medium ${
                apiStatus.status === 'connected' ? 'text-green-700' :
                apiStatus.status === 'checking' ? 'text-yellow-700' : 'text-red-700'
              }`}>{apiStatus.message}</span>
            </div>
            <p className="text-xs text-gray-500 mt-1">–†–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞</p>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</label>
            <div className="flex items-center gap-2">
              <span className={`w-3 h-3 rounded-full ${
                adminStatus.status === 'connected' ? 'bg-green-500' :
                adminStatus.status === 'checking' ? 'bg-yellow-500' : 'bg-red-500'
              }`}></span>
              <span className={`font-medium ${
                adminStatus.status === 'connected' ? 'text-green-700' :
                adminStatus.status === 'checking' ? 'text-yellow-700' : 'text-red-700'
              }`}>{adminStatus.message}</span>
            </div>
            <p className="text-xs text-gray-500 mt-1">–†–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</p>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">API Endpoint</label>
            <span className="text-gray-900 font-mono text-sm">{config.API_BASE_URL}</span>
            <p className="text-xs text-gray-500 mt-1">–ê–∫—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä API</p>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Admin Panel URL</label>
            <span className="text-purple-700 font-mono text-sm">{config.ADMIN_PANEL_URL}</span>
            <p className="text-xs text-gray-500 mt-1">URL —Ç–µ–∫—É—â–µ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</p>
          </div>
        </div>
      </div>

      {/* API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <div className="bg-gray-50 rounded-lg p-6">
        <h3 className="text-lg font-medium mb-4 flex items-center gap-2">
          <span>üåê</span> API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">API Base URL</label>
            <input
              type="text"
              value={config.API_BASE_URL || 'https://1d63af88-56a1-4b3c-8e0c-fe1281161f7f-00-10x24o4uzb5bh.picard.replit.dev/api'}
              onChange={(e) => handleChange('API_BASE_URL', e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="https://1d63af88-56a1-4b3c-8e0c-fe1281161f7f-00-10x24o4uzb5bh.picard.replit.dev/api"
            />
            <p className="text-xs text-gray-500 mt-1">–ê–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —Å–µ—Ä–≤–µ—Ä—É</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">API Key</label>
            <input
              type="password"
              value={config.API_KEY}
              onChange={(e) => handleChange('API_KEY', e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="your-secret-api-key"
            />
            <p className="text-xs text-gray-500 mt-1">–ö–ª—é—á API –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Admin Panel URL</label>
            <input
              type="text"
              value={config.ADMIN_PANEL_URL}
              onChange={(e) => handleChange('ADMIN_PANEL_URL', e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="https://admin.mywebsite.com"
            />
            <p className="text-xs text-gray-500 mt-1">URL –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Webhook URL</label>
            <input
              type="text"
              value={config.WEBHOOK_URL}
              onChange={(e) => handleChange('WEBHOOK_URL', e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="https://mywebsite.com/webhook-endpoint"
            />
            <p className="text-xs text-gray-500 mt-1">URL –¥–ª—è webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</p>
          </div>
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è API –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
        <div className="flex justify-end mt-6 pt-4 border-t border-gray-200">
          <button
            onClick={onSave}
            disabled={saving}
            className="bg-green-500 hover:bg-green-600 disabled:bg-green-300 text-white px-6 py-2 rounded-lg flex items-center gap-2 transition-colors"
          >
            {saving && (
              <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
            )}
            {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
          </button>
          {saved && (
            <div className="ml-3 flex items-center text-green-600 font-medium">
              <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
            </div>
          )}
        </div>
      </div>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—ç—à–∞ */}
      <div className="bg-gray-50 rounded-lg p-6">
        <h3 className="text-lg font-medium mb-4 flex items-center gap-2">
          <span>‚ö°</span> –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—ç—à–∞
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–ü—Ä–µ—Ñ–∏–∫—Å –∫—ç—à–∞</label>
            <input
              type="text"
              value={config.PREFIX}
              onChange={(e) => handleChange('PREFIX', e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="admin_"
            />
            <p className="text-xs text-gray-500 mt-1">–ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –∫–ª—é—á–µ–π</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–°—Ä–æ–∫ –∫—ç—à–∞ (—á–∞—Å—ã)</label>
            <input
              type="number"
              value={config.CACHE_EXPIRY_HOURS}
              onChange={(e) => handleChange('CACHE_EXPIRY_HOURS', parseInt(e.target.value))}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="24"
            />
            <p className="text-xs text-gray-500 mt-1">–í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–†–∞–∑–º–µ—Ä –∫—ç—à–∞ (–ú–ë)</label>
            <input
              type="number"
              value={config.MAX_CACHE_SIZE_MB}
              onChange={(e) => handleChange('MAX_CACHE_SIZE_MB', parseInt(e.target.value))}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="100"
            />
            <p className="text-xs text-gray-500 mt-1">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä</p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Timeout (–º—Å)</label>
            <input
              type="number"
              value={config.TIMEOUT_MS}
              onChange={(e) => handleChange('TIMEOUT_MS', parseInt(e.target.value))}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="5000"
            />
            <p className="text-xs text-gray-500 mt-1">–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–æ–≤</p>
          </div>
        </div>

        <div className="mt-6">
          <label className="block text-sm font-medium text-gray-700 mb-2">–†–µ–∂–∏–º –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å–µ—Ä–≤–µ—Ä–∞</label>
          <select
            value={config.FAILOVER_STORAGE}
            onChange={(e) => handleChange('FAILOVER_STORAGE', e.target.value)}
            className="w-full md:w-1/2 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          >
            {failoverOptions.map(option => (
              <option key={option.value} value={option.value}>
                {option.label}
              </option>
            ))}
          </select>
          <p className="text-xs text-gray-500 mt-1">–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API</p>
        </div>
        
        <div className="mt-6 pt-6 border-t border-gray-200">
          <div className="flex flex-col sm:flex-row gap-4">
            <button
              onClick={onSave}
              disabled={saving}
              className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2"
            >
              {saving ? (
                <>
                  <span className="animate-spin">‚ü≥</span>
                  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                </>
              ) : (
                <>
                  <span>üíæ</span>
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                </>
              )}
            </button>
            
            <button
              onClick={resetToDefaults}
              className="px-6 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 flex items-center gap-2"
            >
              <span>üîÑ</span>
              –°–±—Ä–æ—Å–∏—Ç—å –∫ –Ω–æ–≤—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            </button>
          </div>
          
          {saved && (
            <div className="mt-2 text-green-600 text-sm flex items-center gap-1">
              <span>‚úì</span>
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ConfigTab;