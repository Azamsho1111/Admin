import React, { useState, useEffect } from 'react';
import storageService from '../services/storageService';
import { useModalContext } from './ModalProvider';

const SettingsPage = () => {
  const { success, error, warning, confirm } = useModalContext();
  const [activeTab, setActiveTab] = useState('api');
  const [storageMode, setStorageMode] = useState('local');
  const [systemInfo, setSystemInfo] = useState({
    apiStatus: 'checking',
    dbStatus: 'checking',
    totalModels: 0,
    totalUsers: 0,
    lastSync: null
  });
  
  const [settings, setSettings] = useState({
    API_BASE_URL: 'u185465.test-handyhost.ru/laravel/public/api',
    ADMIN_PANEL_URL: window.location.origin,
    WEBHOOK_URL: `${window.location.origin}/webhook-endpoint`,
    API_KEY: 'laravel_api_token',
    STORAGE_MODE: 'database',
    CACHE_EXPIRY_HOURS: 24,
    FAILOVER_STORAGE: 'mysql',
    timeout: 30,
    cacheSize: '50MB',
    syncInterval: 300,
    notifications: true,
    autoSave: true,
    // Laravel –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    LARAVEL_APP_URL: 'http://u185465.test-handyhost.ru/laravel/public',
    LARAVEL_API_PREFIX: '/api',
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    API_TIMEOUT: 30000,
    RETRY_ATTEMPTS: 3,
    DEFAULT_HEADERS: {
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    },
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MySQL
    DATABASE_HOST: '127.0.0.1',
    DATABASE_PORT: 3306,
    DATABASE_NAME: 'u185465_admin',
    DATABASE_USER: 'u185465_admin',
    DATABASE_PASSWORD: 'BKm7fP2nVz'
  });
  
  const [showPasswords, setShowPasswords] = useState(false);
  
  const [saving, setSaving] = useState(false);
  const [saved, setSaved] = useState(false);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    loadStoredSettings();
    checkSystemStatus();
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑ —Å–µ—Ä–≤–∏—Å–∞
    const currentMode = storageService.mode;
    setStorageMode(currentMode);
  }, []);

  const checkSystemStatus = async () => {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–∏—Å —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
      const data = await storageService.getData('dashboard', 'api_dashboard.php');
      
      if (data && data.success !== false) {
        setSystemInfo(prev => ({
          ...prev,
          apiStatus: 'connected',
          dbStatus: 'connected',
          totalModels: data.total_models || data.data?.total_models || 0,
          totalUsers: data.total_users || data.data?.total_users || 0,
          lastSync: new Date().toLocaleString('ru-RU')
        }));
      } else {
        throw new Error('–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
      }
    } catch (error) {
      console.log('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error.message);
      setSystemInfo(prev => ({
        ...prev,
        apiStatus: 'error',
        dbStatus: 'error',
        totalModels: 0,
        totalUsers: 0,
        lastSync: '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è'
      }));
    }
  };

  const loadStoredSettings = () => {
    const stored = localStorage.getItem('admin_settings');
    if (stored) {
      const parsed = JSON.parse(stored);
      setSettings(prev => ({ ...prev, ...parsed }));
    }
  };

  const handleSave = async () => {
    setSaving(true);
    try {
      localStorage.setItem('admin_settings', JSON.stringify(settings));
      setTimeout(() => {
        setSaving(false);
        setSaved(true);
        success('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ');
        setTimeout(() => setSaved(false), 3000);
      }, 1000);
    } catch (err) {
      setSaving(false);
      error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: ' + err.message, '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
    }
  };

  const runBenchmark = async () => {
    // –¢–µ—Å—Ç localStorage
    const localStart = performance.now();
    try {
      for (let i = 0; i < 1000; i++) {
        localStorage.setItem(`test_${i}`, JSON.stringify({ data: `test_data_${i}` }));
      }
      const localTime = performance.now() - localStart;
      
      // –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      for (let i = 0; i < 1000; i++) {
        localStorage.removeItem(`test_${i}`);
      }
      
      // –¢–µ—Å—Ç API
      const apiStart = performance.now();
      try {
        const response = await fetch('http://u185465.test-handyhost.ru/api_dashboard.php');
        const apiTime = performance.now() - apiStart;
        
        if (response.ok) {
          success(`–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–Ω—á–º–∞—Ä–∫–∞:\nLocal: ${localTime.toFixed(2)}ms\nAPI: ${apiTime.toFixed(2)}ms`, '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–Ω—á–º–∞—Ä–∫–∞');
        } else {
          warning(`–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–Ω—á–º–∞—Ä–∫–∞:\nLocal: ${localTime.toFixed(2)}ms\nAPI: –û—à–∏–±–∫–∞ ${response.status}`, '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–Ω—á–º–∞—Ä–∫–∞');
        }
      } catch (apiError) {
        console.log('API benchmark error:', apiError);
        error(`–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–Ω—á–º–∞—Ä–∫–∞:\nLocal: ${localTime.toFixed(2)}ms\nAPI: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è`, '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–Ω—á–º–∞—Ä–∫–∞');
      }
    } catch (localError) {
      console.log('LocalStorage benchmark error:', localError);
      error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ localStorage', '–û—à–∏–±–∫–∞ –±–µ–Ω—á–º–∞—Ä–∫–∞');
    }
  };

  const changeStorageMode = (mode) => {
    setStorageMode(mode);
    storageService.setMode(mode);
    setSettings(prev => ({ ...prev, storageMode: mode }));
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    setTimeout(() => {
      checkSystemStatus();
    }, 100);
  };

  const syncData = async () => {
    try {
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
      localStorage.removeItem('admin_categories');
      localStorage.removeItem('admin_sections');
      
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
      window.location.reload();
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
      alert('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
  };

  const tabs = [
    { id: 'api', label: 'API –ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: 'üåê' },
    { id: 'storage', label: '–†–µ–∂–∏–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è', icon: 'üè™' },
    { id: 'config', label: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è', icon: '‚öôÔ∏è' },
    { id: 'adapter', label: 'StorageAdapter', icon: 'üîó' },
    { id: 'info', label: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', icon: '‚ÑπÔ∏è' }
  ];

  const storageOptions = [
    {
      id: 'local',
      title: 'Local',
      icon: 'üíæ',
      description: '–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ. –ë—ã—Å—Ç—Ä–æ, –Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ —Ä–∞–∑–º–µ—Ä–æ–º localStorage.'
    },
    {
      id: 'api',
      title: 'API',
      icon: '‚òÅÔ∏è',
      description: '–í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Å —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ API. –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.',
      selected: true
    },
    {
      id: 'hybrid',
      title: 'Hybrid',
      icon: 'üîÑ',
      description: '–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º: –¥–∞–Ω–Ω—ã–µ –∫—ç—à–∏—Ä—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ, –ø—Ä–∏ –æ—à–∏–±–∫–µ API –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫—ç—à.'
    }
  ];

  const getStorageUsage = () => {
    const stats = storageService.getStorageStats();
    return stats.totalSize.replace(' –ú–ë', '');
  };

  const getStorageStats = () => {
    return storageService.getStorageStats();
  };

  const testAPIConnection = async () => {
    try {
      const response = await fetch(`${settings.API_BASE_URL}/api_dashboard.php`, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          ...(settings.API_KEY && { 'Authorization': `Bearer ${settings.API_KEY}` })
        },
        timeout: settings.API_TIMEOUT
      });
      
      if (response.ok) {
        alert('API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç.');
      } else {
        alert(`–û—à–∏–±–∫–∞ API: ${response.status} ${response.statusText}`);
      }
    } catch (error) {
      alert(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: ${error.message}`);
    }
  };

  const testFTPConnection = async () => {
    if (!settings.FTP_PASSWORD) {
      alert('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å FTP –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
      return;
    }
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å FTP, –Ω–æ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏
    alert('FTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å.');
  };

  const testEndpoint = async (endpoint) => {
    try {
      const response = await fetch(`http://${settings.API_BASE_URL}${endpoint}`, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'Cookie': 'handyhosttrial=yes'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        success(`–≠–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: ${JSON.stringify(data).substring(0, 100)}...`, '–¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞');
      } else {
        warning(`–û—à–∏–±–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞: ${response.status}`, '–¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞');
      }
    } catch (error) {
      error(`–û—à–∏–±–∫–∞: ${error.message}`, '–¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞');
    }
  };

  const renderAPITab = () => (
    <div className="space-y-8">
      {/* API –°–µ—Ä–≤–µ—Ä */}
      <div className="bg-white rounded-lg shadow-sm border p-6">
        <h3 className="text-xl font-semibold text-gray-900 mb-6 flex items-center gap-2">
          <span>üåê</span>
          API –°–µ—Ä–≤–µ—Ä
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ë–∞–∑–æ–≤—ã–π URL API
            </label>
            <input
              type="text"
              value={settings.API_BASE_URL}
              onChange={(e) => setSettings(prev => ({ ...prev, API_BASE_URL: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="http://u185465.test-handyhost.ru"
            />
            <p className="text-sm text-gray-500 mt-1">
              –û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –≤—Å–µ—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤
            </p>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ (–º—Å)
            </label>
            <input
              type="number"
              value={settings.API_TIMEOUT}
              onChange={(e) => setSettings(prev => ({ ...prev, API_TIMEOUT: parseInt(e.target.value) }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="30000"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
            </label>
            <input
              type="number"
              value={settings.RETRY_ATTEMPTS}
              onChange={(e) => setSettings(prev => ({ ...prev, RETRY_ATTEMPTS: parseInt(e.target.value) }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="3"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              API –∫–ª—é—á (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
            </label>
            <input
              type={showPasswords ? "text" : "password"}
              value={settings.API_KEY}
              onChange={(e) => setSettings(prev => ({ ...prev, API_KEY: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="handyhosttrial=yes"
            />
            <p className="text-sm text-gray-500 mt-1">
              –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: handyhosttrial=yes
            </p>
          </div>
        </div>
        
        <div className="mt-6">
          <button
            onClick={testAPIConnection}
            className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
          </button>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ –ø–∞—Ä–æ–ª–µ–π */}
      <div className="bg-white rounded-lg shadow-sm border p-4">
        <div className="flex items-center justify-between">
          <h3 className="text-lg font-medium text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</h3>
          <button
            onClick={() => setShowPasswords(!showPasswords)}
            className={`px-4 py-2 rounded-lg font-medium transition-colors ${
              showPasswords 
                ? 'bg-red-100 text-red-700 hover:bg-red-200' 
                : 'bg-green-100 text-green-700 hover:bg-green-200'
            }`}
          >
            {showPasswords ? '–°–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª–∏' : '–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª–∏'}
          </button>
        </div>
      </div>

      {/* FTP –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <div className="bg-white rounded-lg shadow-sm border p-6">
        <h3 className="text-xl font-semibold text-gray-900 mb-6 flex items-center gap-2">
          <span>üìÅ</span>
          FTP –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              FTP –•–æ—Å—Ç
            </label>
            <input
              type="text"
              value={settings.FTP_HOST}
              onChange={(e) => setSettings(prev => ({ ...prev, FTP_HOST: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="109.95.210.216"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              FTP –ü–æ—Ä—Ç
            </label>
            <input
              type="number"
              value={settings.FTP_PORT}
              onChange={(e) => setSettings(prev => ({ ...prev, FTP_PORT: parseInt(e.target.value) }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="21"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              FTP –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            </label>
            <input
              type="text"
              value={settings.FTP_USER}
              onChange={(e) => setSettings(prev => ({ ...prev, FTP_USER: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="u185465"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              FTP –ü–∞—Ä–æ–ª—å
            </label>
            <input
              type={showPasswords ? "text" : "password"}
              name="ftp_password"
              autoComplete="new-password"
              value={settings.FTP_PASSWORD || ''}
              onChange={(e) => setSettings(prev => ({ ...prev, FTP_PASSWORD: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å FTP"
            />
          </div>
        </div>
        
        <div className="mt-6">
          <button
            onClick={testFTPConnection}
            className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
          >
            –ü—Ä–æ–≤–µ—Ä–∏—Ç—å FTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
          </button>
        </div>
      </div>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö */}
      <div className="bg-white rounded-lg shadow-sm border p-6">
        <h3 className="text-xl font-semibold text-gray-900 mb-6 flex items-center gap-2">
          <span>üóÑÔ∏è</span>
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –•–æ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            </label>
            <input
              type="text"
              value={settings.DATABASE_HOST}
              onChange={(e) => setSettings(prev => ({ ...prev, DATABASE_HOST: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="127.0.0.1"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ü–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            </label>
            <input
              type="number"
              value={settings.DATABASE_PORT}
              onChange={(e) => setSettings(prev => ({ ...prev, DATABASE_PORT: parseInt(e.target.value) }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="3306"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            </label>
            <input
              type="text"
              value={settings.DATABASE_NAME}
              onChange={(e) => setSettings(prev => ({ ...prev, DATABASE_NAME: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="u185459_laravel"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            </label>
            <input
              type="text"
              value={settings.DATABASE_USER}
              onChange={(e) => setSettings(prev => ({ ...prev, DATABASE_USER: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="u185459_laravel"
            />
          </div>
          
          <div className="md:col-span-2">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ü–∞—Ä–æ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            </label>
            <input
              type={showPasswords ? "text" : "password"}
              name="database_password"
              autoComplete="new-password"
              value={settings.DATABASE_PASSWORD || ''}
              onChange={(e) => setSettings(prev => ({ ...prev, DATABASE_PASSWORD: e.target.value }))}
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
            />
          </div>
        </div>
        
        <div className="mt-6">
          <button
            onClick={() => success('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç!', '–¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')}
            className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
          >
            –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
          </button>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ */}
      <div className="bg-white rounded-lg shadow-sm border p-6">
        <h3 className="text-xl font-semibold text-gray-900 mb-6 flex items-center gap-2">
          <span>üîó</span>
          API –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã
        </h3>
        
        <div className="space-y-3">
          {[
            { name: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', endpoint: '/categories', description: 'Laravel API –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π' },
            { name: '–†–∞–∑–¥–µ–ª—ã', endpoint: '/sections', description: 'Laravel API –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤' },
            { name: '–ú–æ–¥–µ–ª–∏', endpoint: '/models', description: 'Laravel API –¥–ª—è 3D –º–æ–¥–µ–ª–µ–π' },
            { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', endpoint: '/users', description: 'Laravel API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' },
            { name: '–î–∞—à–±–æ—Ä–¥', endpoint: '/dashboard', description: 'Laravel API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏' },
            { name: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', endpoint: '/api_materials.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏' },
            { name: '–†–µ–Ω–¥–µ—Ä—ã', endpoint: '/api_renders.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–Ω–¥–µ—Ä–∞–º–∏' },
            { name: '–¶–≤–µ—Ç–∞', endpoint: '/api_colors.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞–º–∏' },
            { name: '–°–æ—Ñ—Ç', endpoint: '/api_softs.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–º –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ–º' },
            { name: '–§–æ—Ä–º–∞—Ç—ã', endpoint: '/api_formats.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ —Ñ–∞–π–ª–æ–≤' },
            { name: '–ü–æ–ª–∏–≥–æ–Ω—ã', endpoint: '/api_polygons.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–∏–≥–æ–Ω–∞–º–∏' },
            { name: '–°—Ç–∏–ª–∏', endpoint: '/api_styles.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è–º–∏' },
            { name: '–ê–Ω–∏–º–∞—Ü–∏—è', endpoint: '/api_animation.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–µ–π' },
            { name: '–°—Ç–∞—Ç—É—Å—ã', endpoint: '/api_statuses.php', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏' },
            { name: '–ü—Ä–æ—á–µ–µ', endpoint: '/api_others.php', description: '–ü—Ä–æ—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' }
          ].map((api, index) => (
            <div key={index} className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
              <div>
                <h4 className="font-medium text-gray-900">{api.name}</h4>
                <p className="text-sm text-gray-500">{api.description}</p>
                <code className="text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded">
                  {settings.API_BASE_URL}{api.endpoint}
                </code>
              </div>
              <button
                onClick={() => testEndpoint(api.endpoint)}
                className="px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded hover:bg-gray-200 transition-colors"
              >
                –¢–µ—Å—Ç
              </button>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  const renderStorageTab = () => (
    <div>
      <div className="flex justify-between items-center mb-6">
        <h3 className="text-xl font-medium text-gray-900">
          –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        </h3>
        <div className="text-sm text-gray-500">
          –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: <span className="font-medium text-blue-600">{storageMode.toUpperCase()}</span> | 
          –≠–ª–µ–º–µ–Ω—Ç–æ–≤: <span className="font-medium">{systemInfo.totalModels}</span> | 
          –†–∞–∑–º–µ—Ä: <span className="font-medium">{getStorageUsage()} –ú–ë</span>
        </div>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        {storageOptions.map(option => (
          <div 
            key={option.id}
            className={`relative p-6 border-2 rounded-lg cursor-pointer transition-all ${
              storageMode === option.id 
                ? 'border-blue-500 bg-blue-50' 
                : 'border-gray-200 bg-white hover:border-gray-300'
            }`}
            onClick={() => changeStorageMode(option.id)}
          >
            {storageMode === option.id && (
              <div className="absolute top-3 right-3 w-6 h-6 bg-green-500 rounded-full flex items-center justify-center">
                <span className="text-white text-sm">‚úì</span>
              </div>
            )}
            <div className="text-center">
              <div className="text-4xl mb-4">{option.icon}</div>
              <h4 className="text-lg font-semibold mb-3">{option.title}</h4>
              <p className="text-sm text-gray-600 leading-relaxed">
                {option.description}
              </p>
            </div>
          </div>
        ))}
      </div>

      <div className="bg-gray-50 rounded-lg p-6">
        <div className="flex justify-between items-center">
          <div>
            <h4 className="text-lg font-medium text-gray-900 mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h4>
            <p className="text-sm text-gray-600">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏</p>
          </div>
          <div className="flex gap-3">
            <button
              onClick={syncData}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å
            </button>
            <button
              onClick={runBenchmark}
              className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
            >
              –ë–µ–Ω—á–º–∞—Ä–∫
            </button>
          </div>
        </div>
        
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ */}
        <div className="mt-4 grid grid-cols-1 md:grid-cols-4 gap-4 text-sm">
          <div>
            <span className="text-gray-600">–†–µ–∂–∏–º:</span>
            <span className="ml-2 font-medium">{storageMode.toUpperCase()}</span>
          </div>
          <div>
            <span className="text-gray-600">–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä:</span>
            <span className="ml-2 font-medium">{getStorageUsage()} –ú–ë</span>
          </div>
          <div>
            <span className="text-gray-600">–≠–ª–µ–º–µ–Ω—Ç–æ–≤:</span>
            <span className="ml-2 font-medium">{systemInfo.totalModels}</span>
          </div>
          <div>
            <span className="text-gray-600">–°—Ç–∞—Ç—É—Å API:</span>
            <span className={`ml-2 font-medium ${
              systemInfo.apiStatus === 'connected' ? 'text-green-600' : 
              systemInfo.apiStatus === 'error' ? 'text-red-600' : 'text-yellow-600'
            }`}>
              {systemInfo.apiStatus === 'connected' ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : 
               systemInfo.apiStatus === 'error' ? '–û—à–∏–±–∫–∞' : '–ü—Ä–æ–≤–µ—Ä–∫–∞...'}
            </span>
          </div>
        </div>
      </div>
    </div>
  );

  const testConnection = async () => {
    try {
      await checkSystemStatus();
      alert('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ!');
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ' + error.message);
    }
  };

  const saveToLaravel = async () => {
    try {
      const response = await fetch(`${settings.API_BASE_URL}/api_settings.php`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(settings)
      });
      
      if (response.ok) {
        console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
        return true;
      }
      throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
    } catch (error) {
      console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage (—Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)');
      return false;
    }
  };

  const renderConfigTab = () => (
    <div>
      <h3 className="text-xl font-medium text-gray-900 mb-6">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</h3>
      
      {/* –û—Å–Ω–æ–≤–Ω—ã–µ API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <div className="bg-white border rounded-lg p-6 mb-6">
        <div className="flex items-center gap-3 mb-4">
          <div className="w-8 h-8 bg-blue-600 rounded flex items-center justify-center">
            <span className="text-white text-sm">üåê</span>
          </div>
          <h4 className="text-lg font-semibold text-blue-900">–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API</h4>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">API_BASE_URL</label>
            <input 
              type="url" 
              value={settings.API_BASE_URL}
              onChange={(e) => setSettings(prev => ({ ...prev, API_BASE_URL: e.target.value }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="https://api.mywebsite.com"
            />
            <p className="text-sm text-gray-500 mt-1">–ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API —Å–µ—Ä–≤–µ—Ä–∞</p>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">ADMIN_PANEL_URL</label>
            <input 
              type="url" 
              value={settings.ADMIN_PANEL_URL}
              onChange={(e) => setSettings(prev => ({ ...prev, ADMIN_PANEL_URL: e.target.value }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="https://admin.mywebsite.com"
            />
            <p className="text-sm text-gray-500 mt-1">URL —Å–∞–º–æ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –¥–ª—è –ø–µ—Ä–µ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏</p>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">WEBHOOK_URL</label>
            <input 
              type="url" 
              value={settings.WEBHOOK_URL}
              onChange={(e) => setSettings(prev => ({ ...prev, WEBHOOK_URL: e.target.value }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="https://mywebsite.com/webhook-endpoint"
            />
            <p className="text-sm text-gray-500 mt-1">URL –¥–ª—è webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞</p>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">API_KEY</label>
            <input 
              type="password" 
              value={settings.API_KEY}
              onChange={(e) => setSettings(prev => ({ ...prev, API_KEY: e.target.value }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="your-secret-api-key"
            />
            <p className="text-sm text-gray-500 mt-1">–ö–ª—é—á API –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤</p>
          </div>
        </div>
      </div>

      {/* –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –æ —Ä–µ–∂–∏–º–µ —Ö—Ä–∞–Ω–µ–Ω–∏—è */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
        <div className="flex items-center gap-3">
          <div className="w-8 h-8 bg-blue-600 rounded flex items-center justify-center">
            <span className="text-white text-sm">‚ÑπÔ∏è</span>
          </div>
          <div>
            <h4 className="text-sm font-semibold text-blue-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∂–∏–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è</h4>
            <p className="text-sm text-blue-700">–†–µ–∂–∏–º —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫–µ "–†–µ–∂–∏–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è". –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: <span className="font-semibold">{storageMode.toUpperCase()}</span></p>
          </div>
        </div>
      </div>

      {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
      <div className="bg-gray-50 border rounded-lg p-6 mb-6">
        <h4 className="text-lg font-semibold text-gray-900 mb-4">–°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</h4>
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
          <div>
            <h5 className="font-medium text-gray-900 mb-2">API –°–µ—Ä–≤–µ—Ä</h5>
            <div className="flex items-center gap-2">
              <div className={`w-3 h-3 rounded-full ${
                systemInfo.apiStatus === 'connected' ? 'bg-green-500' : 
                systemInfo.apiStatus === 'error' ? 'bg-red-500' : 'bg-yellow-500'
              }`}></div>
              <span className={`font-medium ${
                systemInfo.apiStatus === 'connected' ? 'text-green-700' : 
                systemInfo.apiStatus === 'error' ? 'text-red-700' : 'text-yellow-700'
              }`}>
                {systemInfo.apiStatus === 'connected' ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : 
                 systemInfo.apiStatus === 'error' ? '–û—à–∏–±–∫–∞' : '–ü—Ä–æ–≤–µ—Ä–∫–∞...'}
              </span>
            </div>
          </div>
          
          <div>
            <h5 className="font-medium text-gray-900 mb-2">–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö MySQL</h5>
            <div className="flex items-center gap-2">
              <div className={`w-3 h-3 rounded-full ${
                systemInfo.dbStatus === 'connected' ? 'bg-green-500' : 
                systemInfo.dbStatus === 'error' ? 'bg-red-500' : 'bg-yellow-500'
              }`}></div>
              <span className={`font-medium ${
                systemInfo.dbStatus === 'connected' ? 'text-green-700' : 
                systemInfo.dbStatus === 'error' ? 'text-red-700' : 'text-yellow-700'
              }`}>
                {systemInfo.dbStatus === 'connected' ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : 
                 systemInfo.dbStatus === 'error' ? '–û—à–∏–±–∫–∞' : '–ü—Ä–æ–≤–µ—Ä–∫–∞...'}
              </span>
            </div>
          </div>
          
          <div>
            <h5 className="font-medium text-gray-900 mb-2">–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h5>
            <div className="flex items-center gap-2">
              <div className="w-3 h-3 bg-green-500 rounded-full"></div>
              <span className="text-green-700 font-medium">–ê–∫—Ç–∏–≤–Ω–∞</span>
            </div>
          </div>
          
          <div>
            <h5 className="font-medium text-gray-900 mb-2">–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</h5>
            <div className="text-sm text-gray-700">{systemInfo.lastSync || '–ù–µ –≤—ã–ø–æ–ª–Ω—è–ª–∞—Å—å'}</div>
          </div>
        </div>
      </div>

      <div className="flex gap-4">
        <button 
          onClick={async () => {
            setSaving(true);
            const serverSaved = await saveToLaravel();
            handleSave();
            if (serverSaved) {
              alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
            } else {
              alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ (—Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)');
            }
            setSaving(false);
          }}
          disabled={saving}
          className="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50"
        >
          {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
        </button>
        <button 
          onClick={async () => {
            setSaving(true);
            try {
              const { apiConfig } = await import('../services/apiConfigService.js');
              const results = await apiConfig.saveEverywhere(settings, {
                localStorageKey: 'admin_settings',
                apiEndpoint: '/api_settings.php'
              });
              
              let message = '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:\n';
              message += `‚úì –õ–æ–∫–∞–ª—å–Ω–æ: ${results.localStorage ? '–£—Å–ø–µ—à–Ω–æ' : '–û—à–∏–±–∫–∞'}\n`;
              message += `‚úì API —Å–µ—Ä–≤–µ—Ä: ${results.api ? '–£—Å–ø–µ—à–Ω–æ' : '–û—à–∏–±–∫–∞'}`;
              
              if (results.errors.length > 0) {
                message += '\n\n–û—à–∏–±–∫–∏:\n' + results.errors.join('\n');
              }
              
              alert(message);
            } catch (error) {
              alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ' + error.message);
            }
            setSaving(false);
          }}
          disabled={saving}
          className="px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors disabled:opacity-50"
        >
          {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–µ–∑–¥–µ'}
        </button>
        <button 
          onClick={testConnection}
          className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        </button>
      </div>
    </div>
  );

  const clearCache = () => {
    const keysToRemove = [];
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key && (key.startsWith('cache_') || key.startsWith('api_'))) {
        keysToRemove.push(key);
      }
    }
    keysToRemove.forEach(key => localStorage.removeItem(key));
    alert(`–û—á–∏—â–µ–Ω–æ ${keysToRemove.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫—ç—à–∞`);
  };

  const renderAdapterTab = () => (
    <div>
      <h3 className="text-xl font-medium text-gray-900 mb-6">StorageAdapter - –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã</h3>
      
      {/* –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        {/* Local —Ä–µ–∂–∏–º */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-blue-600 rounded flex items-center justify-center">
              <span className="text-white text-sm">üíæ</span>
            </div>
            <h4 className="text-lg font-semibold text-blue-900">Local —Ä–µ–∂–∏–º</h4>
          </div>
          <p className="text-sm text-blue-800 mb-3">
            –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å localStorage. –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –æ—Ñ–ª–∞–π–Ω.
          </p>
          <div className="space-y-2 text-xs">
            <div><span className="font-medium text-green-700">–ü–ª—é—Å—ã:</span> <span className="text-blue-700">–ë—ã—Å—Ç—Ä–æ, —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ñ–ª–∞–π–Ω</span></div>
            <div><span className="font-medium text-red-700">–ú–∏–Ω—É—Å—ã:</span> <span className="text-blue-700">–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ ~5-10–ú–ë</span></div>
          </div>
        </div>

        {/* API —Ä–µ–∂–∏–º */}
        <div className="bg-green-50 border border-green-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-green-600 rounded flex items-center justify-center">
              <span className="text-white text-sm">‚òÅÔ∏è</span>
            </div>
            <h4 className="text-lg font-semibold text-green-900">API —Ä–µ–∂–∏–º</h4>
          </div>
          <p className="text-sm text-green-800 mb-3">
            –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ REST API. –í—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
          </p>
          <div className="space-y-2 text-xs">
            <div><span className="font-medium text-green-700">–ü–ª—é—Å—ã:</span> <span className="text-green-700">–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</span></div>
            <div><span className="font-medium text-red-700">–ú–∏–Ω—É—Å—ã:</span> <span className="text-green-700">–¢—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç</span></div>
          </div>
        </div>

        {/* Hybrid —Ä–µ–∂–∏–º */}
        <div className="bg-purple-50 border border-purple-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-purple-600 rounded flex items-center justify-center">
              <span className="text-white text-sm">üîÑ</span>
            </div>
            <h4 className="text-lg font-semibold text-purple-900">Hybrid —Ä–µ–∂–∏–º</h4>
          </div>
          <p className="text-sm text-purple-800 mb-3">
            –î–∞–Ω–Ω—ã–µ –∫—ç—à–∏—Ä—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ —Å TTL. –ü—Ä–∏ –æ—à–∏–±–∫–µ API –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫—ç—à –∫–∞–∫ fallback.
          </p>
          <div className="space-y-2 text-xs">
            <div><span className="font-medium text-green-700">–ü–ª—é—Å—ã:</span> <span className="text-purple-700">–õ—É—á—à–µ–µ –∏–∑ –æ–±–æ–∏—Ö —Ä–µ–∂–∏–º–æ–≤</span></div>
            <div><span className="font-medium text-red-700">–ú–∏–Ω—É—Å—ã:</span> <span className="text-purple-700">–°–ª–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</span></div>
          </div>
        </div>
      </div>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–∞–ø—Ç–µ—Ä–∞ */}
      <div className="bg-white border rounded-lg p-6 mb-6">
        <h4 className="text-lg font-semibold text-gray-900 mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–∞–ø—Ç–µ—Ä–∞</h4>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–†–∞–∑–º–µ—Ä –∫—ç—à–∞</label>
            <select 
              value={settings.cacheSize}
              onChange={(e) => setSettings(prev => ({ ...prev, cacheSize: e.target.value }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <option value="10MB">10 MB</option>
              <option value="50MB">50 MB</option>
              <option value="100MB">100 MB</option>
            </select>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (—Å–µ–∫)</label>
            <input 
              type="number" 
              value={settings.syncInterval}
              onChange={(e) => setSettings(prev => ({ ...prev, syncInterval: parseInt(e.target.value) }))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              min="60"
              max="3600"
            />
          </div>
          <div className="flex items-end">
            <button
              onClick={clearCache}
              className="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
            >
              –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
            </button>
          </div>
        </div>
      </div>

      {/* –°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã Hybrid —Ä–µ–∂–∏–º–∞ */}
      <div className="bg-white border rounded-lg p-6">
        <h4 className="text-lg font-semibold text-gray-900 mb-4">–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã Hybrid —Ä–µ–∂–∏–º–∞</h4>
        <div className="space-y-3">
          <div className="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
            <div className="w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">1</div>
            <span className="text-sm text-gray-700">–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –∫—ç—à–µ</span>
          </div>
          <div className="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
            <div className="w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">2</div>
            <span className="text-sm text-gray-700">–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–≤–µ–∂–∏–µ (–Ω–µ –∏—Å—Ç–µ–∫ TTL) - –≤–æ–∑–≤—Ä–∞—Ç –∏–∑ –∫—ç—à–∞</span>
          </div>
          <div className="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
            <div className="w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">3</div>
            <span className="text-sm text-gray-700">–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏ - –∑–∞–ø—Ä–æ—Å –∫ API</span>
          </div>
          <div className="flex items-center gap-3 p-3 bg-green-50 rounded-lg">
            <div className="w-6 h-6 bg-green-500 text-white rounded-full flex items-center justify-center text-sm font-bold">4</div>
            <span className="text-sm text-gray-700">–ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ—Ç–≤–µ—Ç–µ - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö</span>
          </div>
          <div className="flex items-center gap-3 p-3 bg-red-50 rounded-lg">
            <div className="w-6 h-6 bg-red-500 text-white rounded-full flex items-center justify-center text-sm font-bold">5</div>
            <span className="text-sm text-gray-700">–ü—Ä–∏ –æ—à–∏–±–∫–µ API - –≤–æ–∑–≤—Ä–∞—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫—ç—à–∞</span>
          </div>
        </div>
      </div>
    </div>
  );

  const renderInfoTab = () => (
    <div>
      <h3 className="text-xl font-medium text-gray-900 mb-6">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</h3>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        {/* –í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã */}
        <div className="bg-orange-50 border border-orange-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-3">
            <div className="w-8 h-8 bg-orange-500 rounded flex items-center justify-center">
              <span className="text-white text-sm">üìã</span>
            </div>
            <h4 className="text-lg font-semibold text-orange-900">–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã</h4>
          </div>
          <div className="text-2xl font-bold text-blue-600 mb-1">v1.0.0</div>
          <p className="text-sm text-orange-700">–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</p>
        </div>

        {/* –î–æ–º–µ–Ω */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-3">
            <div className="w-8 h-8 bg-blue-500 rounded flex items-center justify-center">
              <span className="text-white text-sm">üåê</span>
            </div>
            <h4 className="text-lg font-semibold text-blue-900">–î–æ–º–µ–Ω</h4>
          </div>
          <div className="text-sm font-mono text-gray-700 break-all mb-1">
            {window.location.hostname}
          </div>
          <p className="text-sm text-blue-700">–¢–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω</p>
        </div>

        {/* –°–µ—Ä–≤–µ—Ä */}
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-3">
            <div className="w-8 h-8 bg-yellow-500 rounded flex items-center justify-center">
              <span className="text-white text-sm">‚ö°</span>
            </div>
            <h4 className="text-lg font-semibold text-yellow-900">–°–µ—Ä–≤–µ—Ä</h4>
          </div>
          <div className="text-lg font-semibold text-gray-700 mb-1">React Dev Server</div>
          <p className="text-sm text-yellow-700">–¢–∏–ø —Å–µ—Ä–≤–µ—Ä–∞</p>
        </div>

        {/* –ü—Ä–æ—Ç–æ–∫–æ–ª */}
        <div className="bg-amber-50 border border-amber-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-3">
            <div className="w-8 h-8 bg-amber-500 rounded flex items-center justify-center">
              <span className="text-white text-sm">üîí</span>
            </div>
            <h4 className="text-lg font-semibold text-amber-900">–ü—Ä–æ—Ç–æ–∫–æ–ª</h4>
          </div>
          <div className="text-lg font-semibold text-gray-700 mb-1">{window.location.protocol.replace(':', '')}</div>
          <p className="text-sm text-amber-700">–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª</p>
        </div>

        {/* –ü–æ—Ä—Ç */}
        <div className="bg-pink-50 border border-pink-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-3">
            <div className="w-8 h-8 bg-pink-500 rounded flex items-center justify-center">
              <span className="text-white text-sm">üöÄ</span>
            </div>
            <h4 className="text-lg font-semibold text-pink-900">–ü–æ—Ä—Ç</h4>
          </div>
          <div className="text-lg font-semibold text-gray-700 mb-1">{window.location.port || '80'}</div>
          <p className="text-sm text-pink-700">–ü–æ—Ä—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</p>
        </div>

        {/* –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º */}
        <div className="bg-purple-50 border border-purple-200 rounded-lg p-6">
          <div className="flex items-center gap-3 mb-3">
            <div className="w-8 h-8 bg-purple-500 rounded flex items-center justify-center">
              <span className="text-white text-sm">üè™</span>
            </div>
            <h4 className="text-lg font-semibold text-purple-900">–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º</h4>
          </div>
          <div className="text-lg font-semibold text-purple-600 mb-1">{storageMode.toUpperCase()}</div>
          <p className="text-sm text-purple-700">–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Ö—Ä–∞–Ω–µ–Ω–∏—è</p>
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã */}
      <div className="bg-white border rounded-lg p-6">
        <h4 className="text-lg font-semibold text-gray-900 mb-4">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</h4>
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
          <div>
            <h5 className="font-medium text-gray-900 mb-2">–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–µ–π</h5>
            <div className="text-2xl font-bold text-blue-600">{systemInfo.totalModels}</div>
            <p className="text-sm text-gray-600">–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å API</p>
          </div>
          <div>
            <h5 className="font-medium text-gray-900 mb-2">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h5>
            <div className="text-2xl font-bold text-green-600">{systemInfo.totalUsers}</div>
            <p className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</p>
          </div>
          <div>
            <h5 className="font-medium text-gray-900 mb-2">–†–∞–∑–º–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞</h5>
            <div className="text-2xl font-bold text-orange-600">{getStorageUsage()} –ú–ë</div>
            <p className="text-sm text-gray-600">–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ</p>
          </div>
          <div>
            <h5 className="font-medium text-gray-900 mb-2">–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</h5>
            <div className="text-sm text-gray-700">{systemInfo.lastSync || '–ü—Ä–æ–≤–µ—Ä–∫–∞...'}</div>
            <p className="text-sm text-gray-600">–° —Å–µ—Ä–≤–µ—Ä–æ–º API</p>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        <div className="flex items-center justify-between mb-8">
          <h1 className="text-3xl font-bold text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h1>
          <button 
            onClick={handleSave}
            disabled={saving}
            className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50"
          >
            {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
          </button>
        </div>

        {/* –í–∫–ª–∞–¥–∫–∏ */}
        <div className="mb-6">
          <div className="border-b border-gray-200">
            <nav className="-mb-px flex space-x-8">
              {tabs.map(tab => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm flex items-center gap-2 transition-colors ${
                    activeTab === tab.id
                      ? 'border-blue-500 text-blue-600'
                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  }`}
                >
                  <span>{tab.icon}</span>
                  {tab.label}
                </button>
              ))}
            </nav>
          </div>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
        <div className="min-h-96">
          {activeTab === 'api' && renderAPITab()}
          {activeTab === 'storage' && renderStorageTab()}
          {activeTab === 'config' && renderConfigTab()}
          {activeTab === 'adapter' && renderAdapterTab()}
          {activeTab === 'info' && renderInfoTab()}
        </div>

        {saved && (
          <div className="fixed bottom-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
          </div>
        )}
      </div>
    </div>
  );
};

export default SettingsPage;